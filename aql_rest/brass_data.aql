typeside sql1 = literal {
        imports sql
        java_types
          Geo = "java.lang.Long"
        java_constants
          Geo = "return java.lang.Long.decode(input[0])"
        java_functions
          EqualStr : String, String -> Bool = "return input[0].equals(input[1])"
          EqualVc : Varchar, Varchar -> Bool = "return input[0].equals(input[1])"
          EqualInt : Varchar, Varchar -> Bool = "return input[0].equals(input[1])"
          OrBool : Bool, Bool -> Bool = "return input[0] || input[1]"
        }
schema S = literal : sql1 {
  entities 
    cot_event_position
    cot_event
    source
  foreign_keys 
    source_fk : cot_event -> source
    cot_event_fk : cot_event_position -> cot_event
  attributes 
    source_id : source -> Varchar
    name : source -> Varchar
    channel : source -> Varchar
    id : cot_event -> Varchar
    source_id : cot_event -> Varchar
    cot_type : cot_event -> Varchar
    how : cot_event -> Varchar
    detail : cot_event -> Varchar
    servertime : cot_event -> Varchar
    cot_event_id : cot_event_position -> Varchar
    point_hae : cot_event_position -> Varchar
    point_ce : cot_event_position -> Varchar
    point_le : cot_event_position -> Varchar
    tilex : cot_event_position -> Varchar
    tiley : cot_event_position -> Varchar
    longitude : cot_event_position -> Varchar
    latitude : cot_event_position -> Varchar
    observation_equations 
      forall x:cot_event . source_id(x) = source_id(source_fk(x))
      forall y:cot_event_position . cot_event_id(y) = id(cot_event_fk(y))
 options allow_java_eqs_unsafe=true }

schema X = literal : sql1 {
  entities 
    source
    cospan
  foreign_keys 
    source_fk : cospan -> source
  attributes 
    source_id : source -> Varchar
    name : source -> Varchar
    channel : source -> Varchar
    cot_event_id : cospan -> Varchar
    source_id : cospan -> Varchar
    cot_type : cospan -> Varchar
    how : cospan -> Varchar
    detail : cospan -> Varchar
    servertime : cospan -> Varchar
    point_hae : cospan -> Varchar
    point_ce : cospan -> Varchar
    point_le : cospan -> Varchar
    tilex : cospan -> Varchar
    tiley : cospan -> Varchar
    latitude : cospan -> Varchar
    longitude : cospan -> Varchar
    observation_equations 
      forall x:cospan . source_id(x) = source_id(source_fk(x))
 options allow_java_eqs_unsafe=true }

mapping F = literal : S -> X {
  entity source -> source
    attributes 
      source_id -> source_id
      name -> name
      channel -> channel
  entity cot_event -> cospan
    foreign_keys 
      source_fk -> source_fk
    attributes 
      id -> cot_event_id
      source_id -> source_id
      cot_type -> cot_type
      how -> how
      detail -> detail
      servertime -> servertime
  entity cot_event_position -> cospan
    foreign_keys 
      cot_event_fk -> cospan
    attributes 
      cot_event_id -> cot_event_id
      point_hae -> point_hae
      point_ce -> point_ce
      point_le -> point_le
      tilex -> tilex
      tiley -> tiley
      latitude -> latitude
      longitude -> longitude

}

schema T = literal : sql1 {
  entities 
    aeb88d8
    ab67343
    source
  foreign_keys 
    source_fk : ab67343 -> source
    ab67343_fk : aeb88d8 -> ab67343
    aeb88d8_fk : ab67343 -> aeb88d8
  attributes 
    cot_type : ab67343 -> Varchar
    detail : ab67343 -> Varchar
    how : ab67343 -> Varchar
    id : ab67343 -> Varchar
    servertime : ab67343 -> Varchar
    source_id : ab67343 -> Varchar
    id : aeb88d8 -> Varchar
    latitude : aeb88d8 -> Varchar
    longitude : aeb88d8 -> Varchar
    point_ce : aeb88d8 -> Varchar
    point_hae : aeb88d8 -> Varchar
    point_le : aeb88d8 -> Varchar
    tilex : aeb88d8 -> Varchar
    tiley : aeb88d8 -> Varchar
    channel : source -> Varchar
    name : source -> Varchar
    source_id : source -> Varchar
    observation_equations 
      forall x:ab67343 . source_id(x) = source_id(source_fk(x))
      forall x:ab67343 . id(x) = id(aeb88d8_fk(x))
      forall x:aeb88d8 . id(x) = id(ab67343_fk(x))
 options allow_java_eqs_unsafe=true }

mapping G = literal : T -> X {
  entity ab67343 -> cospan
    foreign_keys 
      aeb88d8_fk -> cospan
      source_fk -> source_fk
    attributes 
      cot_type -> cot_type
      detail -> detail
      how -> how
      id -> cot_event_id
      servertime -> servertime
      source_id -> source_id
  entity aeb88d8 -> cospan
    foreign_keys 
      ab67343_fk -> cospan
    attributes 
      id -> cot_event_id
      latitude -> latitude
      longitude -> longitude
      point_ce -> point_ce
      point_hae -> point_hae
      point_le -> point_le
      tilex -> tilex
      tiley -> tiley
  entity source -> source
    attributes 
      channel -> channel
      name -> name
      source_id -> source_id

}

query Qx = [ toCoQuery G ; toQuery F ]

   query Qs_01 = simple : S  {
     from
      ce:cot_event
     where
      ce.cot_type = "a-n-A-C-F-s"
     attributes
      event_id -> ce.id
      source_id -> ce.source_id
      cot_type -> ce.cot_type
     }
   

   query Qt_01 = [ Qx ; Qs_01 ]
   

   query Qs_02 = simple : S  {
     from
      ce:cot_event
     where
      ce.servertime = "201705071635"
     attributes
      event_id -> ce.id
      source_id -> ce.source_id
      cot_type -> ce.cot_type
      how -> ce.how
     }
   

   query Qt_02 = [ Qx ; Qs_02 ]
   

   query Qs_03 = simple : S {
      from ce : cot_event
      where
        ce.servertime = "201705071635"
        ce.cot_type = "a-n-A-C-F-m"
      attributes
        event_id -> ce.id
        source_id -> ce.source_id
        cot_type -> ce.cot_type
        how -> ce.how
      }
   

   query Qt_03 = [ Qx ; Qs_03 ]
   

   query Qs_04 = simple : S {
      from
        ce : cot_event
        s : source
      where
        s = ce.source_fk
        s.channel = "7"
      attributes
        name -> s.name
        event_id -> ce.id
        cot_type -> ce.cot_type
        servertime -> ce.servertime
   }
   

   query Qt_04 = [ Qx ; Qs_04 ]
   

     query Qs_05 = simple : S {
            from
              s : source
              ce : cot_event
            where
              s = ce.source_fk
              s.channel = "7"
            attributes
              event_id -> ce.id
              cot_type -> ce.cot_type
              servertime -> ce.servertime
     }
   

   query Qt_05 = [ Qx ; Qs_05 ]
   

   query Qs_06 = simple : S {
     from
       ce : cot_event
       s : source
     where
       s = ce.source_fk
       OrBool(EqualVc(s.channel,"5"),
              EqualVc(ce.cot_type,"a-n-A-C-F-s")) = true
     attributes
       name -> s.name
       event_id -> ce.id
       cot_type -> ce.cot_type
       servertime -> ce.servertime
   }
   

   query Qt_06 = [ Qx ; Qs_06 ]
   

   query Qs_07 = simple : S {
     from
       ce : cot_event
       cep : cot_event_position
       s : source
     where
       s = ce.source_fk
       ce = cep.cot_event_fk
       s.channel = "6"
       cep.tilex = "18830"
       cep.tiley = "25704"
     attributes
       name -> s.name
       event_id -> ce.id
       cot_type -> ce.cot_type
       servertime -> ce.servertime
     }
   

   query Qt_07 = [ Qx ; Qs_07 ]
   

  schema S8 = literal : sql1 {
     entities
           Q
       attributes
           source_id : Q -> Varchar
           name : Q -> Varchar
           event_id : Q -> Varchar
           time : Q -> Varchar
           tilex : Q -> Varchar
           tiley : Q -> Varchar
   }
  

   query Qs_08pre = literal : S -> S8 {
      params
         name_parm : Varchar
         servertime_parm : Varchar
      entity
        Q -> {
          from
            s : source
            ce : cot_event
            cep : cot_event_position
          where
            s = ce.source_fk
            ce = cep.cot_event_fk
            s.name = name_parm
            ce.servertime = servertime_parm
          attributes
            source_id -> s.source_id
            name -> s.name
            event_id -> ce.id
            time -> ce.servertime
            tilex -> cep.tilex
            tiley -> cep.tiley
        }
     }
   

   query Qt_08pre = [ Qx ; Qs_08pre ]
   

   query Qs_08 = literal : S -> S8 {
      bindings
         name_parm = "A6A7DC"
         servertime_parm = "1494174900"
      imports Qs_08pre
   }

   query Qt_08 = [ Qx ; Qs_08 ]
   

  schema S9 = literal : sql1 {
     entities
           Q
       attributes
           source_id : Q -> Varchar
           name : Q -> Varchar
           event_id : Q -> Varchar
           time : Q -> Varchar
           tilex : Q -> Varchar
           tiley : Q -> Varchar
     }


   query Qs_09pre = literal : S -> S9 {
     params
        name_param : Varchar
        servertime_param : Varchar
      entity
        Q -> {
          from
            s : source
            ce : cot_event
            cep : cot_event_position
          where
            s = ce.source_fk
            ce = cep.cot_event_fk
            s.name = name_param
            ce.servertime = servertime_param
          attributes
            source_id -> s.source_id
            name -> s.name
            event_id -> ce.id
            time -> ce.servertime
            tilex -> cep.tilex
            tiley -> cep.tiley
        }
     }
   

   query Qt_09pre = [ Qx ; Qs_09pre ]
   

   query Qs_09 = literal : S -> S9 {
      bindings
         name_param = "A6A7DC"
         servertime_param = "1494174900"

      imports Qs_09pre
   }
   

   query Qt_09 = [ Qx ; Qs_09 ]
   
